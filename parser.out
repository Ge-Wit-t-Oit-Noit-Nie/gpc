Grammar:

Rule 0     S' -> program
Rule 1     program -> statement_list statement
Rule 2     program -> statement_list
Rule 3     statement_list -> statement
Rule 4     statement -> NAME LPAREN param_list RPAREN SEMICOLON
Rule 5     statement -> NAME SEMICOLON
Rule 6     parameter -> NAME EQUALS NUMBER
Rule 7     param_list -> param_list SEPARATOR parameter
Rule 8     param_list -> parameter

Terminals, with rules where they appear:

EQUALS               : 6
LPAREN               : 4
NAME                 : 4 5 6
NUMBER               : 6
RPAREN               : 4
SEMICOLON            : 4 5
SEPARATOR            : 7
error                : 

Nonterminals, with rules where they appear:

param_list           : 4 7
parameter            : 7 8
program              : 0
statement            : 1 3
statement_list       : 1 2


state 0

    (0) S' -> . program
    (1) program -> . statement_list statement
    (2) program -> . statement_list
    (3) statement_list -> . statement
    (4) statement -> . NAME LPAREN param_list RPAREN SEMICOLON
    (5) statement -> . NAME SEMICOLON
    NAME            shift and go to state 4

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> program .


state 2

    (1) program -> statement_list . statement
    (2) program -> statement_list .
    (4) statement -> . NAME LPAREN param_list RPAREN SEMICOLON
    (5) statement -> . NAME SEMICOLON
    $end            reduce using rule 2 (program -> statement_list .)
    NAME            shift and go to state 4

    statement                      shift and go to state 5

state 3

    (3) statement_list -> statement .
    NAME            reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> NAME . LPAREN param_list RPAREN SEMICOLON
    (5) statement -> NAME . SEMICOLON
    LPAREN          shift and go to state 6
    SEMICOLON       shift and go to state 7


state 5

    (1) program -> statement_list statement .
    $end            reduce using rule 1 (program -> statement_list statement .)


state 6

    (4) statement -> NAME LPAREN . param_list RPAREN SEMICOLON
    (7) param_list -> . param_list SEPARATOR parameter
    (8) param_list -> . parameter
    (6) parameter -> . NAME EQUALS NUMBER
    NAME            shift and go to state 8

    param_list                     shift and go to state 9
    parameter                      shift and go to state 10

state 7

    (5) statement -> NAME SEMICOLON .
    NAME            reduce using rule 5 (statement -> NAME SEMICOLON .)
    $end            reduce using rule 5 (statement -> NAME SEMICOLON .)


state 8

    (6) parameter -> NAME . EQUALS NUMBER
    EQUALS          shift and go to state 11


state 9

    (4) statement -> NAME LPAREN param_list . RPAREN SEMICOLON
    (7) param_list -> param_list . SEPARATOR parameter
    RPAREN          shift and go to state 12
    SEPARATOR       shift and go to state 13


state 10

    (8) param_list -> parameter .
    RPAREN          reduce using rule 8 (param_list -> parameter .)
    SEPARATOR       reduce using rule 8 (param_list -> parameter .)


state 11

    (6) parameter -> NAME EQUALS . NUMBER
    NUMBER          shift and go to state 14


state 12

    (4) statement -> NAME LPAREN param_list RPAREN . SEMICOLON
    SEMICOLON       shift and go to state 15


state 13

    (7) param_list -> param_list SEPARATOR . parameter
    (6) parameter -> . NAME EQUALS NUMBER
    NAME            shift and go to state 8

    parameter                      shift and go to state 16

state 14

    (6) parameter -> NAME EQUALS NUMBER .
    RPAREN          reduce using rule 6 (parameter -> NAME EQUALS NUMBER .)
    SEPARATOR       reduce using rule 6 (parameter -> NAME EQUALS NUMBER .)


state 15

    (4) statement -> NAME LPAREN param_list RPAREN SEMICOLON .
    NAME            reduce using rule 4 (statement -> NAME LPAREN param_list RPAREN SEMICOLON .)
    $end            reduce using rule 4 (statement -> NAME LPAREN param_list RPAREN SEMICOLON .)


state 16

    (7) param_list -> param_list SEPARATOR parameter .
    RPAREN          reduce using rule 7 (param_list -> param_list SEPARATOR parameter .)
    SEPARATOR       reduce using rule 7 (param_list -> param_list SEPARATOR parameter .)
